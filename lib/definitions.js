module.exports = {
  "Component": "React is all about modular, composable components. A component is essentially a javascript function that handles the rendering of a particular peice of the view. A component also contains all of the state and internal logic required by that view.",
  "LifeCycle Method": "LifeCyle Methods are various methods that are automatically executed at specific points of a component's lifecyle. ie componentWillMount is executed right before the component is mounted to the page and after getInitialState. You can utilize component lifecyle methods to have certain actions take place at certain points of your program.",
  "Mixins": "Mixins are a way for different components to share some common functionality in react. This can be compared somewhat to the concept of dependency injection in Angular. For example, component A needs to communicate with our firebase database. Component C also needs this functionality. Rather than rewriting this same function twice, we can write it once and add it as a mixin to any other components that need this. However recently facebook has stated that this is considered bad practice. The option is there as an escape hatch, but facebook reccomends delegating this shared functionality to some higher order component, ie parent component.",
  "state": "State is the essentially a javascript object that holds some information we can access and set about our component. State should never be modified directly, but instead modified with the setState function. This is because when we use the setState function, our component and any child components will check if they need to rerender themselves after the change.",
  "props": "Props, or properties, are state that is handed down from parent to child. Props are immutable or unchangeable from the child component. If a change needs to be made to a prop, then it must either be made from the parent component or through a setter function that is passed from parent to child as a prop. It is generally a bad practice to set a prop to a components state.",
  "render": "Every component has a render function. The render function returns some JSX to be displayed in our view.",
  "CreateClass": "A function that creates a new instance of a reusable react component. These are essentially JavaScript classes and by convention have their names capitalized. A react component will have features such as state, props, and all of our component lifecyle methods. Additionally components can be reused not just in the project they're created in but in any project.",
  "JSX": "An XML syntax for rendering HTML to the page in React. React can be used without JSX, but this is most widley considered the de facto soluton. JSX must have one main closing parent tag, JSX uses 'className' instead of 'class' as 'class' is a reserved word in JavaScript. Any custom html attributes that do not exist in HTML5 must be prefixed with data. ie instead of tag='7' do data-tag='7'. JSX is transpiled back into javascript functions during the build process."
}
